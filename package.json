{
  "name": "karate-runner",
  "displayName": "Karate Runner",
  "description": "Run/Debug Karate Tests and open Build Reports from Codelens and Activity Bar.",
  "icon": "resources/karate.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/kirksl/karate-runner"
  },
  "version": "0.4.0",
  "license": "MIT",
  "author": {
    "name": "Kirk Slota"
  },
  "publisher": "kirkslota",
  "engines": {
    "vscode": "^1.36.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "karate",
    "intuit",
    "rest",
    "api",
    "gatling"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "karate-runner",
          "title": "Karate Runner",
          "icon": "resources/dark/karate.svg"
        }
      ]
    },
    "views": {
      "karate-runner": [
        {
          "id": "karate-reports",
          "name": "Build Reports"
        },
        {
          "id": "karate-tests",
          "name": "Tests"
        }
      ]
    },
    "commands": [
      {
        "command": "karateRunner.runKarateTest",
        "title": "Run Karate Test"
      },
      {
        "command": "karateRunner.openBuildReport",
        "title": "Open Build Report"
      },
      {
        "command": "karateRunner.refreshBuildReportsTree",
        "title": "Refresh",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "karateRunner.refreshTestsTree",
        "title": "Refresh",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "karateRunner.openFile",
        "title": "Open In Editor",
        "icon": {
          "light": "resources/light/open-file.svg",
          "dark": "resources/dark/open-file.svg"
        }
      },
      {
        "command": "karateRunner.runAllKarateTests",
        "title": "Run All Tests",
        "icon": {
          "light": "resources/light/run-all.svg",
          "dark": "resources/dark/run-all.svg"
        }
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "karateRunner.refreshBuildReportsTree",
          "when": "view == karate-reports",
          "group": "navigation"
        },
        {
          "command": "karateRunner.refreshTestsTree",
          "when": "view == karate-tests",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "karateRunner.openFile",
          "when": "view == karate-tests && viewItem == testFile",
          "group": "inline"
        },
        {
          "command": "karateRunner.runAllKarateTests",
          "when": "view == karate-tests && viewItem == testDirectory",
          "group": "inline"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Karate Runner",
      "properties": {
        "karateRunner.karateJar.commandLineArgs": {
          "type": "string",
          "default": "java -cp karate.jar com.intuit.karate.Main",
          "description": "Karate.jar command line.  Karate Runner will handle setting the command line with the feature file being tested and suffixing the feature file with a ':number' when running individual Scenarios.  Only applies when using Karate.jar.",
          "scope": "resource"
        },
        "karateRunner.karateRunner.default": {
          "type": "string",
          "default": "_SyncRunner",
          "description": "Default Karate Runner to use for running Karate tests.  Only applies when using Maven or Gradle.",
          "scope": "resource"
        },
        "karateRunner.karateRunner.promptToSpecify": {
          "type": "boolean",
          "default": true,
          "description": "Prompt to specify Karate Runner before running Karate tests.  Only applies when using Maven or Gradle.",
          "scope": "resource"
        },
        "karateRunner.buildDirectory.cleanBeforeEachRun": {
          "type": "boolean",
          "default": true,
          "description": "Clean build directory before running Karate tests.  Only applies when using Maven or Gradle.",
          "scope": "resource"
        },
        "karateRunner.buildReports.openAfterEachRun": {
          "type": "boolean",
          "default": false,
          "description": "Open reports in default program after running Karate tests.",
          "scope": "resource"
        },
        "karateRunner.buildReports.toTarget": {
          "type": "string",
          "default": "**/{jacoco/test/html/index,cucumber-html-reports/overview-features,surefire-reports/timeline}.htm*",
          "description": "Display reports targeted by glob pattern within Activity Bar.",
          "scope": "resource"
        },
        "karateRunner.buildReports.activityBarDisplayType": {
          "type": "string",
          "default": "Shallow",
          "enum": [
            "Shallow",
            "Deep"
          ],
          "description": "Display reports as a flat list (Shallow) or natural directory structure (Deep) within Activity Bar.",
          "scope": "resource"
        },
        "karateRunner.tests.toTarget": {
          "type": "string",
          "default": "**/src/test/**/*.feature",
          "description": "Display Karate tests targeted by glob pattern within Activity Bar.",
          "scope": "resource"
        },
        "karateRunner.tests.activityBarDisplayType": {
          "type": "string",
          "default": "Shallow",
          "enum": [
            "Shallow",
            "Deep"
          ],
          "description": "Display Karate tests as a flat list (Shallow) or natural directory structure (Deep) within Activity Bar.",
          "scope": "resource"
        }
      }
    },
    "breakpoints": [
      {
        "language": "feature"
      }
    ],
    "debuggers": [
      {
        "type": "karate",
        "label": "Karate (debug)",
        "configurationAttributes": {
          "launch": {
            "required": [
              "feature",
              "karateCli"
            ],
            "properties": {
              "feature": {
                "type": "string",
                "description": "Path to a Karate feature file",
                "default": "^\"\\${file}\""
              },
              "karateCli": {
                "type": "string",
                "description": "Command to start debug server",
                "default": "java -jar karate.jar -d"
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "karate",
            "name": "Karate (debug): Standalone",
            "request": "launch",
            "feature": "${file}",
            "karateCli": "java -jar karate.jar -d"
          }
        ],
        "configurationSnippets": [
          {
            "label": "Karate (debug): Maven",
            "description": "Karate (debug) for a Maven project",
            "body": {
              "type": "karate",
              "name": "Karate (debug): Maven",
              "request": "launch",
              "feature": "^\"\\${file}\"",
              "karateCli": "mvn clean test-compile -f pom.xml exec:java -Dexec.mainClass=com.intuit.karate.cli.Main -Dexec.args='-d' -Dexec.classpathScope=test"
            }
          },
          {
            "label": "Karate (debug): Gradle",
            "description": "Karate (debug) for a Gradle project",
            "body": {
              "type": "karate",
              "name": "Karate (debug): Gradle",
              "request": "launch",
              "feature": "^\"\\${file}\"",
              "karateCli": "gradle clean compileTestJava -b build.gradle karateExecute -DmainClass=com.intuit.karate.cli.Main --args='-d'"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.6.9",
    "@types/vscode": "^1.36.0",
    "glob": "^7.1.4",
    "mocha": "^6.2.0",
    "typescript": "3.5.3",
    "tslint": "^5.18.0",
    "vscode-test": "^1.1.0"
  },
  "dependencies": {
    "fs-extra": "^8.1.0",
    "mkdirp": "^0.5.1",
    "rimraf": "^2.6.3"
  }
}
